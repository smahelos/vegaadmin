services:
    
    # Application
    app:
        build:
            context: .
            dockerfile: app.dockerfile
        container_name: vegaadmin-app
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
        depends_on:
            - "database"
        environment:
            PHP_IDE_CONFIG: "serverName=vegaadmin.local"
            PHP_MEMORY_LIMIT: "512M"
            PHP_MAX_EXECUTION_TIME: "30"
        networks:
            - vegaadmin-network
    # Web Server
    web:
        build:
            context: .
            dockerfile: web.dockerfile
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
        depends_on:
            - "app"
        ports:
            - 80:80
        networks:
            - vegaadmin-network

    # MySQL Database
    database:
        image: mysql:8.0
        container_name: vegaadmin-mysql
        volumes:
            - ./docker/mysql:/var/lib/mysql
            - ./docker/mysql/init:/docker-entrypoint-initdb.d
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        ports:
            - 33061:3306
        networks:
            - vegaadmin-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 5s
            retries: 10

    # Database management
    pma:
        image: phpmyadmin:5.1
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${DB_HOST}
            - PMA_USER=${DB_USERNAME}
            - PMA_PASSWORD=${DB_PASSWORD}
            - PMA_PORT=${DB_PORT}
        depends_on:
            - database
        ports:
            - 8888:80
        networks:
            - vegaadmin-network
    
    # MailHog for email testing
    mailhog:
        image: mailhog/mailhog
        container_name: vegaadmin-mailhog
        logging:
            driver: 'none'
        ports:
            - 1025:1025 
            - 8025:8025
        networks:
            - vegaadmin-network

# Custom network
networks:
    vegaadmin-network:
        driver: bridge

volumes:
    dbdata:
        driver: local